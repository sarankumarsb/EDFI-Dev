<#@ include file="SQLServer.ttinclude" #>
using System;
using System.Linq;
using SubSonic.SqlGeneration.Schema;


namespace <#=Namespace #>
{
<#

    var tables = LoadTables();
	var extendedTables = tables.Where(x=>x.Name.EndsWith("Extension"));

    foreach(Table tbl in tables)
    {
		//Dont process tables that are excluded
		if(ExcludeTables.Contains(tbl.Name))
			continue;

		//By Convention we dont map tables that end with Extension because they should be overriden by a view.
		if(extendedTables.Contains(tbl))
			continue;

		//If there is a view that contains the name of a table in the extended tables lets create it and do magic.
		string objectToInheritFrom = "";
		bool isExtension = false;
		foreach(var extTable in extendedTables)
			if(extTable.Name.Replace("Extension","")==tbl.Name)
			{
				objectToInheritFrom = " : EdFi.Dashboards.Data.Entities." + tbl.Name;
				tbl.Columns = extTable.Columns;
				isExtension = true;
				break;
			}
#>
    
    
    /// <summary>
    /// A class which represents the <#=tbl.Schema #>.<#=tbl.Name #> table in the <#=DatabaseName#> Database.
    /// </summary>
    [SubSonicUseSingularTableName]
	[SubSonicTableNameOverride("<#=tbl.Schema#>].[<#=tbl.Name#>")]
    public class <#=tbl.Name#> <#=objectToInheritFrom#>
    {                          
		<#if(!isExtension){#> 
        public <#=tbl.Name#>() 
        {
        
        }      
        
        private string _keyName = "<#=tbl.PK.CleanName #>";
        public string KeyName()
        {
            return _keyName;
        }

        public object KeyValue()
        {
			<#
			if (tbl.ClassName == tbl.PK.CleanName)
			{
				tbl.PK.CleanName += "X";
			}
			#>
            return this.<#=tbl.PK.CleanName#>;
        }  
        
        public static string GetKeyColumn()
        {
            return "<#=tbl.PK.CleanName #>";
        }         
		<#}/*For the extension logic.*/#>
	<#
    foreach(Column col in tbl.Columns.Distinct())
    {
		if (col.CleanName.ToLower() == "studentusi" || col.CleanName.ToLower() == "staffusi")
			col.SysType = "long";

		if (tbl.ClassName == col.CleanName)
			col.CleanName += "X"; 

		//If we are creating an extension class we skip the creation of the subsonic primary key attirbute and property.
		if(col.CleanName==tbl.PK.CleanName && isExtension)
			continue;
			    
		if(col.CleanName==tbl.PK.CleanName){#>                
		[SubSonicPrimaryKey]<#}#>        
        public <#=col.SysType #><#=CheckNullable(col)#> <#=col.CleanName #> {get; set;}
  <#}#>       
    } 
<#}#>
}
