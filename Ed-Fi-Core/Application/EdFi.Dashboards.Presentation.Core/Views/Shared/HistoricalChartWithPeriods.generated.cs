#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EdFi.Dashboards.Presentation.Core.Views.Shared
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using EdFi.Dashboards.Metric.Resources.Models;
    using EdFi.Dashboards.Presentation.Architecture.Mvc.Extensions;
    using EdFi.Dashboards.Presentation.Web.Utilities;
    using EdFi.Dashboards.Resources.Navigation;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Shared/HistoricalChartWithPeriods.cshtml")]
    public partial class HistoricalChartWithPeriods : System.Web.Mvc.WebViewPage<EdFi.Dashboards.Presentation.Core.Models.Shared.Detail.HistoricalChartWithPeriodsModel>
    {
        public HistoricalChartWithPeriods()
        {
        }
        public override void Execute()
        {

WriteLiteral("         \r\n");


            
            #line 3 "..\..\Views\Shared\HistoricalChartWithPeriods.cshtml"
  
  string urlForWebServiceDefaultPeriod = (Model.WebServiceUrl).Resolve();
  string urlForWebServiceSuppliedPeriod = (Model.WebServiceUrl).Resolve();
  
  var blueHeaderSpan = "#blueHeaderSpan" + Model.MetricVariantId + Model.ActionTitle;


            
            #line default
            #line hidden
WriteLiteral("\r\n<div class=\"historical-chart\" id=\"historical-chart-");


            
            #line 10 "..\..\Views\Shared\HistoricalChartWithPeriods.cshtml"
                                               Write(Model.MetricVariantId);

            
            #line default
            #line hidden
WriteLiteral("\">\r\n    \r\n    <div id=\"dataLoading");


            
            #line 12 "..\..\Views\Shared\HistoricalChartWithPeriods.cshtml"
                    Write(Model.MetricVariantId);

            
            #line default
            #line hidden
WriteLiteral("\" class=\"loading\">\r\n        <span class=\"loading-message\">Loading data...</span>\r" +
"\n    </div>\r\n\r\n    <br id=\"topSpace");


            
            #line 16 "..\..\Views\Shared\HistoricalChartWithPeriods.cshtml"
                Write(Model.MetricVariantId);

            
            #line default
            #line hidden
WriteLiteral("\" style=\"display:none;\"/>\r\n\t\t\t\t\t\t\r\n    <div class=\"display-periods\">\r\n        <sp" +
"an id=\"tableForAvailablePeriods");


            
            #line 19 "..\..\Views\Shared\HistoricalChartWithPeriods.cshtml"
                                      Write(Model.MetricVariantId);

            
            #line default
            #line hidden
WriteLiteral("\">Display by:&nbsp;</span>\r\n    </div>\r\n\r\n    <div class=\"chart\" aria-hidden=\"tru" +
"e\">\r\n        <div class=\"school-goal\" id=\"placeHolderForSchoolGoal");


            
            #line 23 "..\..\Views\Shared\HistoricalChartWithPeriods.cshtml"
                                                         Write(Model.MetricVariantId);

            
            #line default
            #line hidden
WriteLiteral("\"></div>\r\n        <div class=\"chart-placeholder\" id=\"placeHolderForChart");


            
            #line 24 "..\..\Views\Shared\HistoricalChartWithPeriods.cshtml"
                                                          Write(Model.MetricVariantId);

            
            #line default
            #line hidden
WriteLiteral("\"></div>\r\n    \r\n        <div class=\"tooltip\" id=\"chartTooltip");


            
            #line 26 "..\..\Views\Shared\HistoricalChartWithPeriods.cshtml"
                                         Write(Model.MetricVariantId);

            
            #line default
            #line hidden
WriteLiteral("\">\r\n            <div class=\"tooltip-value\" id=\"tooltipValue");


            
            #line 27 "..\..\Views\Shared\HistoricalChartWithPeriods.cshtml"
                                                   Write(Model.MetricVariantId);

            
            #line default
            #line hidden
WriteLiteral("\"></div>\r\n        </div>\r\n    \r\n        <div class=\"tooltip-indicator\" id=\"toolti" +
"pIndicator");


            
            #line 30 "..\..\Views\Shared\HistoricalChartWithPeriods.cshtml"
                                                       Write(Model.MetricVariantId);

            
            #line default
            #line hidden
WriteLiteral("\">\r\n            <div class=\"tooltip-indicator-value\" id=\"tooltipIndicatorValue");


            
            #line 31 "..\..\Views\Shared\HistoricalChartWithPeriods.cshtml"
                                                                      Write(Model.MetricVariantId);

            
            #line default
            #line hidden
WriteLiteral("\"></div>\r\n            <div class=\"tooltip-indicator-pointer\">---</div>\r\n        <" +
"/div>\r\n    \r\n        <div class=\"overview\" id=\"placeHolderForChartOverview");


            
            #line 35 "..\..\Views\Shared\HistoricalChartWithPeriods.cshtml"
                                                         Write(Model.MetricVariantId);

            
            #line default
            #line hidden
WriteLiteral("\"></div>\r\n        \r\n    </div>\r\n    \r\n    <div class=\"slider-container doNotPrint" +
"\">\r\n        <div class=\"slider\" id=\"sliderContainer");


            
            #line 40 "..\..\Views\Shared\HistoricalChartWithPeriods.cshtml"
                                           Write(Model.MetricVariantId);

            
            #line default
            #line hidden
WriteLiteral("\" title=\"* Move the slider to the left or right to change the time period.  Click" +
" either side of the highlighted area to expand the number of time periods.\">\r\n  " +
"          <div class=\"left-arrow\" id=\"sliderLeftArrow");


            
            #line 41 "..\..\Views\Shared\HistoricalChartWithPeriods.cshtml"
                                                   Write(Model.MetricVariantId);

            
            #line default
            #line hidden
WriteLiteral("\"></div>\r\n            <div class=\"middle-area\">\r\n                <div class=\"slid" +
"er-bar ui-draggable\" id=\"sliderBar");


            
            #line 43 "..\..\Views\Shared\HistoricalChartWithPeriods.cshtml"
                                                              Write(Model.MetricVariantId);

            
            #line default
            #line hidden
WriteLiteral("\"></div>\r\n                <div class=\"slider-adjuster slider-adjuster-left\" id=\"s" +
"liderRangeSelectorLeft");


            
            #line 44 "..\..\Views\Shared\HistoricalChartWithPeriods.cshtml"
                                                                                         Write(Model.MetricVariantId);

            
            #line default
            #line hidden
WriteLiteral("\"></div>\r\n                <div class=\"slider-adjuster slider-adjuster-right\" id=\"" +
"sliderRangeSelectorRight");


            
            #line 45 "..\..\Views\Shared\HistoricalChartWithPeriods.cshtml"
                                                                                           Write(Model.MetricVariantId);

            
            #line default
            #line hidden
WriteLiteral("\"></div>\r\n            </div>\r\n            <div class=\"right-arrow\" id=\"sliderRigh" +
"tArrow");


            
            #line 47 "..\..\Views\Shared\HistoricalChartWithPeriods.cshtml"
                                                     Write(Model.MetricVariantId);

            
            #line default
            #line hidden
WriteLiteral("\"></div>\r\n        </div>\r\n    </div>\r\n    \r\n    <div id=\"chart-grid-");


            
            #line 51 "..\..\Views\Shared\HistoricalChartWithPeriods.cshtml"
                    Write(Model.MetricVariantId);

            
            #line default
            #line hidden
WriteLiteral("\" class=\"hidden\" aria-live=\"assertive\"></div>\r\n\r\n    <span id=\"msgsLabel");


            
            #line 53 "..\..\Views\Shared\HistoricalChartWithPeriods.cshtml"
                   Write(Model.MetricVariantId);

            
            #line default
            #line hidden
WriteLiteral("\" class=\"MetricNoData\" style=\"display: none;\">No data available. (Coming soon.)</" +
"span>\r\n    <span id=\"errorLoading");


            
            #line 54 "..\..\Views\Shared\HistoricalChartWithPeriods.cshtml"
                      Write(Model.MetricVariantId);

            
            #line default
            #line hidden
WriteLiteral("\" class=\"MetricNoData\" style=\"display: none;\">Error loading data.</span>\r\n</div>\r" +
"\n\r\n<script id=\"chart-grid-template-");


            
            #line 57 "..\..\Views\Shared\HistoricalChartWithPeriods.cshtml"
                            Write(Model.MetricVariantId);

            
            #line default
            #line hidden
WriteLiteral(@""" type=""text/html"">
    <table summary=""Historical data for metric ${ChartData.ChartTitle}"">
        <thead>
            <tr id=""chart-grid-header-${metricVariantId}"">
                <th id=""chart-grid-info-${metricVariantId}"">Info</th>
                <th id=""chart-grid-category-${metricVariantId}"">Category</th>
                <th id=""chart-grid-performance-${metricVariantId}"">Performance</th>
            </tr>
        </thead>
        <tbody>
            {{each ChartData.SeriesCollection[0].Points}}
            <tr>
                <td headers=""chart-grid-info-${metricVariantId}"">${Tooltip}</td>
                <td headers=""chart-grid-category-${metricVariantId}"">${Label}</td>
                <td headers=""chart-grid-performance-${metricVariantId}"">${(Value*100).toFixed(1)}%</td>
            </tr>
            {{/each}}
        </tbody>
    </table>
</script>

<script type=""text/javascript"">
		
    $(function () {
        //The chart...
        //First get a handle on the placeholders and Dom Objects and vars needed...
        var metricVariantId = ");


            
            #line 83 "..\..\Views\Shared\HistoricalChartWithPeriods.cshtml"
                          Write(Model.MetricVariantId);

            
            #line default
            #line hidden
WriteLiteral(";\r\n        \t\r\n        var schoolGoalPlaceHolder = $(\'#placeHolderForSchoolGoal\'+m" +
"etricVariantId);\r\n        \t\r\n        var blueHeaderSpan = \'");


            
            #line 87 "..\..\Views\Shared\HistoricalChartWithPeriods.cshtml"
                          Write(blueHeaderSpan);

            
            #line default
            #line hidden
WriteLiteral("\';\r\n\r\n        //Then go get data async\r\n        var dataToSendToService = ");


            
            #line 90 "..\..\Views\Shared\HistoricalChartWithPeriods.cshtml"
                             Write(Html.Raw(Model.ParametersToSendToWebService));

            
            #line default
            #line hidden
WriteLiteral(";\r\n\r\n        var loadingDiv=$(\"#dataLoading\"+metricVariantId);\r\n        loadingDi" +
"v.css(\'zIndex\', 9999);\r\n        loadingDiv.show();\r\n\r\n        $.ajax({\r\n        " +
"    type: \"POST\",\r\n            url: \'");


            
            #line 98 "..\..\Views\Shared\HistoricalChartWithPeriods.cshtml"
              Write(urlForWebServiceDefaultPeriod);

            
            #line default
            #line hidden
WriteLiteral("\',\r\n            data: JSON.stringify(dataToSendToService),\r\n            contentTy" +
"pe: \"application/json; charset=utf-8\",\r\n            dataType: \"json\",\r\n         " +
"   success: function (jsonData) {\r\n                loadingDiv.hide();\r\n\r\n       " +
"         //Lets see if we got data back.\r\n                if(hasHistoricalCharta" +
"sData(jsonData)) {        \r\n                    setPeriodTitle(blueHeaderSpan, j" +
"sonData.DrillDownTitle);\r\n                    $(\'#tableForAvailablePeriods\'+metr" +
"icVariantId).after(setAvailablePeriods(metricVariantId, jsonData.AvailablePeriod" +
"s));\r\n                    schoolGoalPlaceHolder.text(setSchoolGoal(jsonData.Char" +
"tData.StripLines));\r\n                    showHistoricalChartComponent(metricVari" +
"antId);\r\n                    plot(metricVariantId,jsonData.ChartData,null);\r\n   " +
"                 jsonData.metricVariantId = metricVariantId;\r\n                  " +
"  $(\"#chart-grid-\" + metricVariantId).html($(\"#chart-grid-template-\" + metricVar" +
"iantId).tmpl(jsonData));\r\n                }\r\n                else //No data so l" +
"ets hide everything.\r\n                {\r\n                    clearPeriodTitle(bl" +
"ueHeaderSpan);\r\n                    hideHistoricalChartComponent(metricVariantId" +
");\r\n                    $(\'#msgsLabel\'+metricVariantId).show();\r\n               " +
" }\r\n\t\t\t\t\t\t\r\n            },\r\n            error: function (result) {\r\n            " +
"    clearPeriodTitle(blueHeaderSpan);\r\n                loadingDiv.hide();\r\n     " +
"           console.log(\"AJAX call failed: \" + result.status + \"\\n\\n \" + result.s" +
"tatusText + \"\\n\\n obj:\"+JSON.stringify(result)); \r\n                $(\'#errorLoad" +
"ing\'+metricVariantId).show();\r\n            }\r\n        });\r\n        \t\r\n        //" +
"HistoricalChartFunctions.js Init\r\n        initSlider(metricVariantId);\r\n        " +
"    \t\t\t\r\n    });//End of Document ready.\r\n        \r\n        \r\n\r\n    function get" +
"JsonDataForPeriod(metricVariantId, periodId) {\r\n        \r\n        var blueHeader" +
"Span = \'");


            
            #line 140 "..\..\Views\Shared\HistoricalChartWithPeriods.cshtml"
                          Write(blueHeaderSpan);

            
            #line default
            #line hidden
WriteLiteral(@"';
        //Set selected period.
        $('#tableForAvailablePeriods'+metricVariantId+' td[class=""LinkFromListActive""]').attr('class', 'LinkFromList');
        $('#tableForAvailablePeriods'+metricVariantId+' td[data-period=""' + periodId + '""]').attr('class', 'LinkFromListActive');
            
        var dataToSendToService = ");


            
            #line 145 "..\..\Views\Shared\HistoricalChartWithPeriods.cshtml"
                             Write(Html.Raw(Model.ParametersToSendToWebService));

            
            #line default
            #line hidden
WriteLiteral(@";
        dataToSendToService.metricVariantId = metricVariantId;

        dataToSendToService.periodId = periodId;

        var loadingDiv=$(""#dataLoading""+metricVariantId);
        loadingDiv.show();
            
        analyticsManager.trackHistoricalChart('changePeriod', metricVariantId, { periodId: periodId });
        $.ajax({
            type: ""POST"",
            url: '");


            
            #line 156 "..\..\Views\Shared\HistoricalChartWithPeriods.cshtml"
              Write(urlForWebServiceSuppliedPeriod);

            
            #line default
            #line hidden
WriteLiteral(@"',
            data: JSON.stringify(dataToSendToService),
            contentType: ""application/json; charset=utf-8"",
            dataType: ""json"",
            success: function (jsonData) {
                loadingDiv.hide();
                //Lets see if we got data back.
                if(hasHistoricalChartasData(jsonData))
                {
                    setPeriodTitle(blueHeaderSpan, jsonData.DrillDownTitle);
                    plot(metricVariantId, jsonData.ChartData, null);
                    sliderReset(metricVariantId);
                    jsonData.metricVariantId = metricVariantId;
                    $(""#chart-grid-"" + metricVariantId).html($(""#chart-grid-template-"" + metricVariantId).tmpl(jsonData));
                }
                else //No data so lets hide everything.
                {
                    clearPeriodTitle(blueHeaderSpan);
                    hideHistoricalChartComponent(metricVariantId);
                    $('#msgsLabel'+metricVariantId).text(""No data available."");
                }
						
            },
            error: function (result) {
                clearPeriodTitle(blueHeaderSpan);
                loadingDiv.hide();
                console.log(""AJAX call failed: "" + result.status + "" "" + result.statusText + "" obj:""+JSON.stringify(result)); 
                $('#errorLoading'+metricVariantId).show();
            }
        });
            
    }
</script>");


        }
    }
}
#pragma warning restore 1591
