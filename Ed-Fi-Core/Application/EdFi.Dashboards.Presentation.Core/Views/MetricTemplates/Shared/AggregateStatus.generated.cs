#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EdFi.Dashboards.Presentation.Core.Views.MetricTemplates.Shared
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using EdFi.Dashboards.Metric.Resources.Models;
    using EdFi.Dashboards.Presentation.Architecture.Mvc.Extensions;
    using EdFi.Dashboards.Presentation.Web.Utilities;
    using EdFi.Dashboards.Resources.Navigation;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/MetricTemplates/Shared/AggregateStatus.cshtml")]
    public partial class AggregateStatus : System.Web.Mvc.WebViewPage<AggregateMetric>
    {

public System.Web.WebPages.HelperResult MetricContextText(IGranularMetric granularMetric)
    {
return new System.Web.WebPages.HelperResult(__razor_helper_writer => {



#line 47 "..\..\Views\MetricTemplates\Shared\AggregateStatus.cshtml"
     
    
    if (Model.DomainEntityType.Replace(" ", "").Equals("LocalEducationAgency", StringComparison.OrdinalIgnoreCase))
    {
        
#line default
#line hidden


#line 51 "..\..\Views\MetricTemplates\Shared\AggregateStatus.cshtml"
WriteTo(@__razor_helper_writer, granularMetric.Values["SchoolAttainment"]);

#line default
#line hidden


#line 51 "..\..\Views\MetricTemplates\Shared\AggregateStatus.cshtml"
                                                  
        if (granularMetric.Values["SchoolAttainment"] != null)
        {

#line default
#line hidden

WriteLiteralTo(@__razor_helper_writer, "            ");

WriteLiteralTo(@__razor_helper_writer, "of\r\n");



#line 55 "..\..\Views\MetricTemplates\Shared\AggregateStatus.cshtml"
        }   
        
#line default
#line hidden


#line 56 "..\..\Views\MetricTemplates\Shared\AggregateStatus.cshtml"
WriteTo(@__razor_helper_writer, granularMetric.Values["SchoolTotal"]);

#line default
#line hidden


#line 56 "..\..\Views\MetricTemplates\Shared\AggregateStatus.cshtml"
                                             
    }
    else if (Model.DomainEntityType.Replace(" ", "").Equals("School", StringComparison.OrdinalIgnoreCase))
    {
        
#line default
#line hidden


#line 60 "..\..\Views\MetricTemplates\Shared\AggregateStatus.cshtml"
WriteTo(@__razor_helper_writer, granularMetric.Values["Subpopulation"]);

#line default
#line hidden


#line 60 "..\..\Views\MetricTemplates\Shared\AggregateStatus.cshtml"
                                               
        if (granularMetric.Values["Subpopulation"] != null)
        { 

#line default
#line hidden

WriteLiteralTo(@__razor_helper_writer, "            ");

WriteLiteralTo(@__razor_helper_writer, "of\r\n");



#line 64 "..\..\Views\MetricTemplates\Shared\AggregateStatus.cshtml"
        }
        
#line default
#line hidden


#line 65 "..\..\Views\MetricTemplates\Shared\AggregateStatus.cshtml"
WriteTo(@__razor_helper_writer, granularMetric.Values["TotalPopulation"]);

#line default
#line hidden


#line 65 "..\..\Views\MetricTemplates\Shared\AggregateStatus.cshtml"
                                                 
    }

#line default
#line hidden

});

}


        public AggregateStatus()
        {
        }
        public override void Execute()
        {


            
            #line 2 "..\..\Views\MetricTemplates\Shared\AggregateStatus.cshtml"
  
    var includedStates = new[] {
                                 MetricStateType.VeryGood,
                                 MetricStateType.Good,
                                 MetricStateType.Acceptable,
                                 MetricStateType.Low,
                                 MetricStateType.VeryLow
                             };
    var granularMetrics =
    (from m in Model.Descendants
     where m.MetricType == MetricType.GranularMetric
     let gm = m as IGranularMetric
     where includedStates.Contains(gm.State.StateType)
            && gm.MetricVariantType == MetricVariantType.CurrentYear
     select gm)
    .ToList();


            
            #line default
            #line hidden
WriteLiteral(@"
<script type=""text/javascript"">
    function addTooltip(metricVariantId) {
        $('#agm'+ metricVariantId).tooltip({
            tip: '#agm'+ metricVariantId +'_div',
            position: 'bottom center',
            bounce: false,
            offset: [8, 0],
            relative:true})
        .on(""focus"", function () {
            // Opens tooltip when tabbing through metric statuses
            $(this).trigger(""mouseover"");
        })
        .on(""blur"", function () {
            // Closes tooltip
            $(this).trigger(""mouseout"");
        });
    }
	
    $(document).ready(function() {
");


            
            #line 39 "..\..\Views\MetricTemplates\Shared\AggregateStatus.cshtml"
         foreach (var granularMetric in granularMetrics)
        {

            
            #line default
            #line hidden
WriteLiteral("            ");

WriteLiteral("addTooltip(");


            
            #line 41 "..\..\Views\MetricTemplates\Shared\AggregateStatus.cshtml"
                    Write(granularMetric.MetricVariantId);

            
            #line default
            #line hidden
WriteLiteral(")\r\n");


            
            #line 42 "..\..\Views\MetricTemplates\Shared\AggregateStatus.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("    });\r\n</script>\r\n\r\n");



WriteLiteral("\r\n\r\n<ol class=\"aggregate-status-tictacs\">\r\n");


            
            #line 70 "..\..\Views\MetricTemplates\Shared\AggregateStatus.cshtml"
     foreach (var granularMetric in granularMetrics)
    {

            
            #line default
            #line hidden
WriteLiteral("        <li>\r\n            <a id=\"agm");


            
            #line 73 "..\..\Views\MetricTemplates\Shared\AggregateStatus.cshtml"
                  Write(granularMetric.MetricVariantId);

            
            #line default
            #line hidden
WriteLiteral("\" href=\"#\" class=\"");


            
            #line 73 "..\..\Views\MetricTemplates\Shared\AggregateStatus.cshtml"
                                                                    Write(Legacy.StatusClass(granularMetric.State.StateType));

            
            #line default
            #line hidden
WriteLiteral("\" onclick=\"location.href=\'");


            
            #line 73 "..\..\Views\MetricTemplates\Shared\AggregateStatus.cshtml"
                                                                                                                                                 Write(granularMetric.Url);

            
            #line default
            #line hidden
WriteLiteral("\';\">\r\n                <em class=\"hidden\">\r\n");


            
            #line 75 "..\..\Views\MetricTemplates\Shared\AggregateStatus.cshtml"
                     if (!string.IsNullOrEmpty(granularMetric.Parent.DisplayName))
                    {
                        
            
            #line default
            #line hidden
            
            #line 77 "..\..\Views\MetricTemplates\Shared\AggregateStatus.cshtml"
                   Write(granularMetric.Parent.DisplayName);

            
            #line default
            #line hidden

WriteLiteral(".");

WriteLiteral("\r\n");


            
            #line 78 "..\..\Views\MetricTemplates\Shared\AggregateStatus.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                    ");


            
            #line 79 "..\..\Views\MetricTemplates\Shared\AggregateStatus.cshtml"
               Write(granularMetric.DisplayName);

            
            #line default
            #line hidden
WriteLiteral(". \r\n                </em>\r\n            </a>\r\n            <em class=\"hidden\">\r\n   " +
"             ");


            
            #line 83 "..\..\Views\MetricTemplates\Shared\AggregateStatus.cshtml"
           Write(Html.Partial("StatusLabel", granularMetric.State, new ViewDataDictionary{{"DisplayText", (granularMetric.Value != null ? granularMetric.DisplayValue : granularMetric.State.StateText)}}));

            
            #line default
            #line hidden
WriteLiteral(" ");


            
            #line 83 "..\..\Views\MetricTemplates\Shared\AggregateStatus.cshtml"
                                                                                                                                                                                                      Write(MetricContextText(granularMetric));

            
            #line default
            #line hidden
WriteLiteral("\r\n            </em>\r\n        </li>\r\n");


            
            #line 86 "..\..\Views\MetricTemplates\Shared\AggregateStatus.cshtml"
    }

            
            #line default
            #line hidden
WriteLiteral("</ol>\r\n\r\n");


            
            #line 89 "..\..\Views\MetricTemplates\Shared\AggregateStatus.cshtml"
 foreach (var granularMetric in granularMetrics)
{

            
            #line default
            #line hidden
WriteLiteral("    <div class=\"aggregate-status-details\" id=\"agm");


            
            #line 91 "..\..\Views\MetricTemplates\Shared\AggregateStatus.cshtml"
                                             Write(granularMetric.MetricVariantId);

            
            #line default
            #line hidden
WriteLiteral("_div\" aria-hidden=\"true\">\r\n        <div class=\"tooltip-arrow-container\"><span cla" +
"ss=\"tooltip-arrow\"></span></div>\r\n\r\n");


            
            #line 94 "..\..\Views\MetricTemplates\Shared\AggregateStatus.cshtml"
         if (!string.IsNullOrEmpty(granularMetric.Parent.DisplayName))
        {

            
            #line default
            #line hidden
WriteLiteral("            <div class=\"title\">");


            
            #line 96 "..\..\Views\MetricTemplates\Shared\AggregateStatus.cshtml"
                          Write(granularMetric.Parent.DisplayName);

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n");


            
            #line 97 "..\..\Views\MetricTemplates\Shared\AggregateStatus.cshtml"
        }

            
            #line default
            #line hidden

            
            #line 98 "..\..\Views\MetricTemplates\Shared\AggregateStatus.cshtml"
         if (!string.IsNullOrEmpty(granularMetric.Parent.Description))
        {

            
            #line default
            #line hidden
WriteLiteral("            <div class=\"subtitle\">");


            
            #line 100 "..\..\Views\MetricTemplates\Shared\AggregateStatus.cshtml"
                             Write(granularMetric.Parent.Description);

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n");


            
            #line 101 "..\..\Views\MetricTemplates\Shared\AggregateStatus.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("        \r\n        <div class=\"aggregate-status-summary\">\r\n            <span class" +
"=\"bullet-title\">&nbsp;&nbsp;&nbsp;&nbsp;");


            
            #line 104 "..\..\Views\MetricTemplates\Shared\AggregateStatus.cshtml"
                                                          Write(granularMetric.DisplayName);

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n            <span class=\"status-goal-container\">");


            
            #line 105 "..\..\Views\MetricTemplates\Shared\AggregateStatus.cshtml"
                                           Write(Html.Partial("StatusLabel", granularMetric.State, new ViewDataDictionary{{"DisplayText", (granularMetric.Value != null ? granularMetric.DisplayValue : granularMetric.State.StateText)}}));

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n            <span class=\"metric-context-text\">\r\n                ");


            
            #line 107 "..\..\Views\MetricTemplates\Shared\AggregateStatus.cshtml"
           Write(MetricContextText(granularMetric));

            
            #line default
            #line hidden
WriteLiteral("\r\n            </span>\r\n        </div>\r\n    </div>\n");


            
            #line 111 "..\..\Views\MetricTemplates\Shared\AggregateStatus.cshtml"
}

            
            #line default
            #line hidden

        }
    }
}
#pragma warning restore 1591
