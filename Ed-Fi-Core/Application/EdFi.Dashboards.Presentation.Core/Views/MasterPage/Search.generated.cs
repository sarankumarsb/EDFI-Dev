#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EdFi.Dashboards.Presentation.Core.Views.MasterPage
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    
    #line 1 "..\..\Views\MasterPage\Search.cshtml"
    using EdFi.Dashboards.Core.Providers.Context;
    
    #line default
    #line hidden
    using EdFi.Dashboards.Metric.Resources.Models;
    using EdFi.Dashboards.Presentation.Architecture.Mvc.Extensions;
    using EdFi.Dashboards.Presentation.Web.Utilities;
    using EdFi.Dashboards.Resources.Navigation;
    
    #line 2 "..\..\Views\MasterPage\Search.cshtml"
    using EdFi.Dashboards.Resources.Navigation.Mvc;
    
    #line default
    #line hidden
    
    #line 3 "..\..\Views\MasterPage\Search.cshtml"
    using EdFi.Dashboards.Resources.Navigation.Support;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "1.5.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/MasterPage/Search.cshtml")]
    public class Search : System.Web.Mvc.WebViewPage<EdFi.Dashboards.Presentation.Web.Areas.Search.Models.QuickSearchModel>
    {
        public Search()
        {
        }
        public override void Execute()
        {




WriteLiteral("           \r\n");


            
            #line 6 "..\..\Views\MasterPage\Search.cshtml"
  
    int? schoolId = EdFiDashboardContext.Current.SchoolId;
    int localEducationAgencyId = EdFiDashboardContext.Current.LocalEducationAgencyId.GetValueOrDefault();
    var quickSearchUrl = EdFiDashboards.Site.Search.QuickSearchWebService(localEducationAgencyId, schoolId);
    var searchResultsUrl = EdFiDashboards.Site.Search.Results(localEducationAgencyId);
    var logUserAction = EdFiDashboards.Site.Search.LogUserActionWebService(localEducationAgencyId, schoolId);


            
            #line default
            #line hidden
WriteLiteral("\r\n");


            
            #line 14 "..\..\Views\MasterPage\Search.cshtml"
 if (Model.CanSearch)
{

            
            #line default
            #line hidden
WriteLiteral(@"    <form>
        <label for=""quicksearch"">Search for</label>
        <div class=""input"">
            <input id=""quicksearch"" type=""search"" placeholder=""Search"" />
            <span class=""loading-indicator""><span class=""hidden"">Loading...</span></span>
        </div>
        <button type=""button"" onclick=""GoToSearchResultsPage();""><i class=""icon-right""></i><span class=""hidden"">Search</span></button>
        <ul class=""l-search-results""></ul>
    </form>
");



            #line 25 "..\..\Views\MasterPage\Search.cshtml"


            
            #line default
            #line hidden
WriteLiteral("    <script type=\"text/javascript\">\r\n        var autoCompleteSettings =\r\n        " +
"    {\r\n                urlForWebService: \'");


            
            #line 29 "..\..\Views\MasterPage\Search.cshtml"
                              Write(quickSearchUrl);

            
            #line default
            #line hidden
WriteLiteral("\',\r\n                urlForSearchResults: \'");


            
            #line 30 "..\..\Views\MasterPage\Search.cshtml"
                                 Write(searchResultsUrl);

            
            #line default
            #line hidden
WriteLiteral(@"',
                onItemSelect: navigateToDefaultLevelPage,
                onNavigateToSearchResults: GoToSearchResultsPage,
                onLogSearch: logUserQuickSearch,
                onLogSearchError: logUserQuickSearchError
            };

        $(document).ready(function() {
            $('#quicksearch').SearchAutoCompleteControl(autoCompleteSettings);
        });


        function navigateToDefaultLevelPage(selectedItem) {

            if (selectedItem.count > 1)
                GoToSearchResultsPage(selectedItem.text);
            else {

                var url = selectedItem.link;
                switch (selectedItem.type) {
                case ""Schools"":
                    logUserQuickSelect('School');
                    break;
                case ""Teachers"":
                    logUserQuickSelect('Teacher');
                    break;
                case ""Students"":
                    logUserQuickSelect('Student');
                    break;
                default:
                    //do nothing because i don't know what to do with it.
                    break;
                }

                if (url) {
                    logUserActionAndRedirect(url);
                }
            }
        }

        function GoToSearchResultsPage(searchString) {

          var searchResultsPage = '");


            
            #line 72 "..\..\Views\MasterPage\Search.cshtml"
                              Write(searchResultsUrl.AppendParameters("t={textValue}"));

            
            #line default
            #line hidden
WriteLiteral(@"';
            if (searchString == undefined || searchString == '') {
                searchString = $('#quicksearch').val();
                if (searchString == $('#quicksearch')[0].title)
                    searchString = '';
            }

            var url = searchResultsPage.replace(""{textValue}"", searchString);

            logUserActionAndRedirect(url);
        }

        function logUserQuickSearchError(terms) {
            analyticsManager.trackSearch('Quick JSON error', ""'"" + terms + ""'"");
        }

        function logUserQuickSearch(terms) {
            analyticsManager.trackSearch('Quick Terms', terms);
        }

        function logUserQuickSelect(type) {
            analyticsManager.trackSearch('Quick Select', type);
        }


        function logUserActionAndRedirect(url) {
            //Then go get data asynchronously
            var dataToSendToService = { url: url, controlNameWhoIsCalling: ""by selecting a simple search auto-complete link"" };

            $.ajax({
                type: ""POST"",
                url: '");


            
            #line 103 "..\..\Views\MasterPage\Search.cshtml"
                 Write(logUserAction);

            
            #line default
            #line hidden
WriteLiteral(@"',
                data: JSON.stringify(dataToSendToService),
                contentType: ""application/json; charset=utf-8"",
                dataType: ""json"",
                success: function () {
                    window.location = url;
                },
                error: function () {
                    //we might have an error because we are probably leaving the page while we submit the data.
                    //even though it will throw an error. It always executes the command on the web service.
                    //alert(""AJAX call failed: "" + result.status + "" "" + result.statusText + "" obj:"" + JSON.stringify(result));
                }
            });

        }
    </script>
");


            
            #line 119 "..\..\Views\MasterPage\Search.cshtml"

}
            
            #line default
            #line hidden

        }
    }
}
#pragma warning restore 1591
